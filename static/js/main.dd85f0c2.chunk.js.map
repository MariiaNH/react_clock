{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","log","toLocaleTimeString","setState","prevProps","name","props","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","setRandomName","hideClock","showClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"2OAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAGjBK,QAAQC,IAAIP,EAAKQ,sBAEjB,EAAKC,SAAS,CAAET,WACf,OAfP,gCAkBE,SAAmBU,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQC,IAAR,uBAA4BG,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SArBlE,kCAyBE,WACEE,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,SACGX,KAAKS,MAAMD,OAGd,mBAAGG,UAAU,cAAb,SACGX,KAAKJ,MAAMC,KAAKQ,8BArC3B,GAA2BO,IAAMC,W,MCPjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJxB,MAAe,CACbyB,UAAWP,IACXQ,UAAU,G,EAGZC,cAAgBrB,aAAY,WAC1B,EAAKI,SAAS,CAAEe,UAAWP,QAC1B,M,EAYHU,UAAY,WACV,EAAKlB,SAAS,CAAEgB,UAAU,K,EAG5BG,UAAY,WACV,EAAKnB,SAAS,CAAEgB,UAAU,K,uDAf5B,WACEI,SAASC,iBAAiB,cAAe3B,KAAKwB,WAE9CE,SAASC,iBAAiB,QAAS3B,KAAKyB,a,kCAG1C,WACEf,cAAcV,KAAKuB,iB,oBAWrB,WACE,MAAgCvB,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKX,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAECW,GACE,cAAC,EAAD,CAAOd,KAAMa,W,GApCNT,IAAMC,WA0CTO,ICtDfQ,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.dd85f0c2.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__name\">\n          {this.props.name}\n        </p>\n\n        <p className=\"clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  setRandomName = setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.setRandomName);\n  }\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        {hasClock\n        && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}